{
	"debug": {
		"email_error": "Failed to send email with subject `{{subject}}` to `{{to}}` (eg: {{error}})",
		"email_sent": "Email with subject `{{subject}}` sent successfully to `{{to}}`"
	},
	"error": {
		"invalid_id": "Invalid ID parameter. ID must be a positive number",
		"invalid_status": "Invalid status parameter. Accepted: {{allowedStatuses}}",
		"filter_string": "Filter must be a string (eg: {{term}})",
		"filter_number": "Filter must be a number (eg: {{term}})",
		"filter_min": "Filter must be at least {{min}} characters long (eg: {{term}})",
		"params_at_least_one": "At least one parameter is required (eg: {{params}})",
		"db_delete_one": "Failed to delete just one entry; Based on filters multiple entries were found",
		"db_delete_missing_filter": "Failed to delete entries; No filter were provided",
		"db_nothing_to_delete": "Failed to delete entries; No entries were found",
		"filter_date_format": "error.filter_date_format"
	},
	"user": {
		"validation": {
			"name_invalid": "Name is invalid",
			"name_min": "Name must be at least {{min}} characters long",
			"email_invalid": "Email is invalid",
			"password_invalid": "Invalid password",
			"password_min": "Password must be at least {{min}} characters long",
			"password_condition_capital_letter": "Password must contain at least one capital letter",
			"password_condition_number": "Password must contain at least one number",
			"password_condition_special_character": "Password must contain at least one special character",
			"password_confirm_required": "Password confirmation is required",
			"password_confirm_mismatch": "Passwords does not match",
			"language_invalid": "user.validation.language_invalid"
		},
		"error": {
			"not_found": "User not found",
			"email_already_used": "Email already used by existing user",
			"status_unchanged": "Status unchanged (eg: {{status}})"
		},
		"success": {
			"create": "User created successfully",
			"update": "User updated successfully",
			"delete": "User deleted successfully",
			"update_status": "User status updated successfully",
			"update_password": "User password updated successfully"
		},
		"history": {
			"created": "User #{{id}} created",
			"updated": "User #{{id}} updated",
			"deleted": "User #{{id}} has been marked as deleted",
			"removed": "User #{{id}} has been removed",
			"status": "User #{{id}} updated from {{oldStatus}} to {{newStatus}}",
			"password_change": "Password changed for user #{{id}}"
		}
	},
	"account": {
		"error": {
			"not_found": "Account not found",
			"not_active": "Account not found",
			"not_authorized": "Invalid email or password",
			"max_active_sessions": "Too many active sessions",
			"not_logged_in": "Not logged in",
			"recovery_attempts_exceeded": "Recovery attempts exceeded. Try again later",
			"recovery_token_not_found": "Recovery token not found",
			"recovery_token_expired": "Recovery token expired",
			"recovery_token_used": "Recovery token already used",
			"recovery_token_not_authorized": "Recovery token not authorized"
		},
		"success": {
			"login": "Logged in successfully",
			"logout": "Logged out successfully",
			"token_deleted": "Token deleted successfully",
			"password_recover": "Password recover email sent successfully",
			"password_changed": "Password changed successfully"
		},
		"validation": {
			"email_required": "Email is required",
			"email_invalid": "Email is invalid",
			"password_required": "Password required",
			"ident_required": "Ident is required",
			"ident_invalid": "Ident is invalid",
			"password_invalid": "account.validation.password_invalid"
		}
	}
}